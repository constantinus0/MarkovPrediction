# Sample makefile for small/medium projects

# dirs for included files
IDIR =../include
# define compiler
CC=gcc
# define additional flags for the compilation process, e.g. -I. -Lpath
CFLAGS=-I$(IDIR)
# dir for object files 
ODIR=obj
# dir for additional libraries (external)
LDIR =../lib
# external library names
LIBS=-lm

# dependencies (header files)
_DEPS = hellomake.h
# patsubst: pattern substitute
# $(patsubst pattern,replacement,text) #'%' works as '*' wildcard
DEPS = $(patsubst %,$(IDIR)/%,$(_DEPS))
# this just prepends the IDIR before the _DEPS string

# object files
_OBJ = hellomake.o hellofunc.o 
OBJ = $(patsubst %,$(ODIR)/%,$(_OBJ))

# general notes on rules: 
# syntax is "left: right1 right2 ... "
# and means that the "left" depends on "right1", "right2", ... and should be recompiled every time one of them changes
# the way to compile it, is given in the next line (always beginning with a <TAB> !!!)
# $@ means the name on the left side of the ':'
# $^ is all the names on the right side of the ':'
# $< is the first name on the right side of the ':'

# rule: all "*.o" depend on "*.c" and the "DEPS" and should be compiled as displayed below every time one of their dependences change
$(ODIR)/%.o: %.c $(DEPS)
	$(CC) -c -o $@ $< $(CFLAGS)

# rule: 
hellomake: $(OBJ)
	gcc -o $@ $^ $(CFLAGS) $(LIBS)

# specifies that the "clean" rule does not depend on specific files, so that the makefile will not try to re-run it when things change
.PHONY: clean

# remove all "*.o" files in the "ODIR" directory, as well as all temp files (marked with an '~' character)
# will be run be calling "make clean" from the terminal
clean:
	rm -f $(ODIR)/*.o *~ core $(INCDIR)/*~ 

